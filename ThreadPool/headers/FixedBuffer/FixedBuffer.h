/*
 * This Code is edited by sun wukong @ 2015.12.26 12:50:36 CST 
 * 
 * Just feel free to use this code as you wish.
 * Any bug and ugly code, please notify me, thanks!
 *
 * Github https://githuc.com/maybe2009
 * Gmail  qtdssunwukong@gmail.com
 * 									-Auto Generated By UltiSnips
 */

#ifndef OK_FIXEDBUFFER_INCLUDED
#define OK_FIXEDBUFFER_INCLUDED

#include <cstdio>
#include <unistd.h>
#include <string.h>
#include <boost/ptr_container/ptr_vector.hpp>
#include <boost/noncopyable.hpp>
namespace ok{
#define KB(n) ((n) * 1024)
#define MB(n) ((n) * 1024 *1024)

class FixedBuffer : public boost::noncopyable
{
public:
    typedef char BYTE;

public:
    FixedBuffer (int size)
        : capacity_(size),
          available_(size),
          waterMeter_(0),
          start_(new BYTE[size]),
          current_(start_),
          end_(start_ + size)
    {}
    
    ~FixedBuffer ()
    {
        delete []start_;
    }

    void dump(int fd)
    {
        /*TODO add exception*/
        ::write(fd, start_, capacity_);
    }

    void write(const void *src, int len)
    {
        if (len <= available_) {
            memcpy(current_, src, len);
            moveMeters(len);
        } 
    }

    void clear()
    {
        memset(start_, 0, capacity_);
        current_    = start_;
        available_  = capacity_;
    }
     
    int getAvailable() const
    {
        return available_;
    }

    int getCapacity() const
    {
        return capacity_;
    }
    
    int getWaterMeter() const 
    {
        return waterMeter_; 
    }

    char* getCurrent()
    {
        return current_;
    }

    /*TODO: delete show() after debug*/
    void show()
    {
        printf("Total size %d Water Meter %d Avai: %d\n", capacity_, waterMeter_, available_);
        for (int i = 0;  i < waterMeter_; ++i) {
            printf("%d:%c ", i, *(start_ + i));
        }
        printf("\n");
    }
private:
    void moveMeters(int len)
    {
        current_    += len;
        available_  -=len;
        waterMeter_ += len;
    }
private:
    const int       capacity_;
    int             available_;
    int             waterMeter_;
    BYTE* const     start_;
    BYTE*           current_;
    BYTE*           end_;
    
};


};

#endif /* ifndef OK_FIXEDBUFFER_INCLUDED */
