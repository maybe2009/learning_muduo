/*
 * This Code is edited by sun wukong @ 2015.12.18 17:43:30 CST 
 * 
 * Just feel free to use this code as you wish.
 * Any bug and ugly code, please notify me, thanks!
 *
 * Github https://githuc.com/maybe2009
 * Gmail  qtdssunwukong@gmail.com
 * 									-Auto Generated By UltiSnips
 */

#ifndef AK_CONDITION_HPP
#define AK_CONDITION_HPP 

#include <pthread.h>
#include <boost/noncopyable.hpp>
#include "Mutex.h"

/*********************************************************************** 
      class Condition Declaration
************************************************************************/ 
namespace ok{
class Condition : public boost::noncopyable
{
public:
    inline  Condition(Mutex& mutex);
    inline ~Condition();

public:
    inline int wait();
    inline int signal();
    inline int broadcast();
private:
    Mutex&          mutex_;
    pthread_cond_t  cond;
};

/*********************************************************************** 
      class Condition Definition
************************************************************************/ 
inline Condition::
Condition(Mutex& mutex) : mutex_(mutex)
{
    pthread_cond_init(&cond, NULL);
}

inline Condition::
~Condition()
{
    pthread_cond_destroy(&cond);
}

int Condition::
wait()
{
    return pthread_cond_wait(&cond, mutex_.get());
}

inline int Condition::
signal()
{
    return pthread_cond_signal(&cond);
}

inline int Condition::
broadcast()
{
    return pthread_cond_broadcast(&cond);
}
};
#endif /* ifndef AK_CONDITION_HPP */

