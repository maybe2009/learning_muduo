/*
 * This Code is edited by sun wukong @ 2016.01.03 16:35:26 CST 
 * 
 * Just feel free to use this code as you wish.
 * Any bug and ugly code, please notify me, thanks!
 *
 * Github https://githuc.com/maybe2009
 * Gmail  qtdssunwukong@gmail.com
 * 									-Auto Generated By UltiSnips
 */

#ifndef OK_FILEIO_INCLUDED
#define OK_FILEIO_INCLUDED

#include <string>
#include <fcntl.h>
#include <boost/noncopyable.hpp>

#include "IOUtility.h"

namespace ok{
class FileWrite : public boost::noncopyable
{
public:
    FileWrite(const std::string filepath, int flags = O_WRONLY|O_APPEND)
        : fd_(-1),
          flags_(flags),
          isOpen_(false),
          filepath_(filepath),
          io_()    
    {}
    
    ~FileWrite()
    {
        if (isOpen_)
        {
            close(fd_);
        }
    }

public:
    int open()
    {
        fd_ = ::open(filepath_.c_str(), flags_);
        if (fd_ != -1)
        {
            isOpen_  = true;
        }

        return fd_;
    }

    size_t write(const std::string& content)
    {
        if (isOpen_)
        {
            return io_.writeN(fd_, content.c_str(), content.size());  
        }
        return -1;
    }

private:
    int             fd_;
    int             flags_;
    bool            isOpen_;
    std::string     filepath_;     
    IOUtility       io_;
};

};


#endif /* ifndef OK_FILEIO_INCLUDED */
