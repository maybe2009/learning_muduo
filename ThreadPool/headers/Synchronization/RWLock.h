/*
 * This Code is edited by sun wukong @ 2015.12.18 17:45:10 CST 
 * 
 * Just feel free to use this code as you wish.
 * Any bug and ugly code, please notify me, thanks!
 *
 * Github https://githuc.com/maybe2009
 * Gmail  qtdssunwukong@gmail.com
 * 									-Auto Generated By UltiSnips
 */

#ifndef AK_RWLOCK_HPP
#define AK_RWLOCK_HPP 
#include <pthread.h>
#include <cstdio>
/*********************************************************************** 
      class RWLock Declaration
************************************************************************/ 
namespace ok{
class RWLock
{
public:
    RWLock();
    ~RWLock();
public:
    int tryLock();
    int rdLock();
    int wrLock();
    int unlock();
private:
    pthread_rwlock_t  rwlock;
};

/*********************************************************************** 
      class RWLock Definition
************************************************************************/ 
RWLock::
RWLock() 
{
    if (pthread_rwlock_init(&rwlock, NULL) != 0) {
        perror("pthread_rwlock_init: ");    
    }
}

RWLock::
~RWLock()
{
    pthread_rwlock_destroy(&rwlock);
}

int RWLock::
tryLock()
{
    return pthread_rwlock_tryrdlock(&rwlock);
}

int RWLock::
rdLock()
{
    return pthread_rwlock_rdlock(&rwlock);
}

int RWLock::
wrLock()
{
    return pthread_rwlock_wrlock(&rwlock);
}

int RWLock::
unlock()
{
    return pthread_rwlock_unlock(&rwlock);
}
};
#endif /* ifndef AK_RWLOCK_HPP */

