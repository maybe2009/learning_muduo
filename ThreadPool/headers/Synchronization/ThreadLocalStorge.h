/*
 * This Code is edited by sun wukong @ 2015.12.23 11:48:56 CST 
 * 
 * Just feel free to use this code as you wish.
 * Any bug and ugly code, please notify me, thanks!
 *
 * Github https://githuc.com/maybe2009
 * Gmail  qtdssunwukong@gmail.com
 * 									-Auto Generated By UltiSnips
 */

#ifndef OK_THREADLOCALSTORGE_INCLUDED
#define OK_THREADLOCALSTORGE_INCLUDED

#include <pthread.h>
#include <boost/function.hpp>
#include <boost/noncopyable.hpp>

namespace ok{
template<typename T>
class ThreadLocalStorge : boost::noncopyable
{
public:

public:
    ThreadLocalStorge()
    {
        pthread_key_create(&key_, TLSdeleter);
    }
    
    ~ThreadLocalStorge() 
    {
        pthread_key_delete(key_);
    }

    T& get()
    {
        T* tmp = static_cast<T*>(pthread_getspecific(key_));
        if (tmp == nullptr) {
            T* obj_ptr = new T();
            pthread_setspecific(key_, obj_ptr);
            return *obj_ptr;    
        
        } else {
            return *tmp;
        }
    }
    
private:
    pthread_key_t   key_;
    static void TLSdeleter(void *ptr)
    {
        T* tmp = static_cast<T*>(ptr);
        delete tmp;   
    }
};
};
#endif /* ifndef OK_THREADLOCALSTORGE_INCLUDED */
